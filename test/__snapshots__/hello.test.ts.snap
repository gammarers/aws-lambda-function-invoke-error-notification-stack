// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`hello 1`] = `
{
  "Mappings": {
    "ServiceprincipalMap": {
      "af-south-1": {
        "states": "states.af-south-1.amazonaws.com",
      },
      "ap-east-1": {
        "states": "states.ap-east-1.amazonaws.com",
      },
      "ap-northeast-1": {
        "states": "states.ap-northeast-1.amazonaws.com",
      },
      "ap-northeast-2": {
        "states": "states.ap-northeast-2.amazonaws.com",
      },
      "ap-northeast-3": {
        "states": "states.ap-northeast-3.amazonaws.com",
      },
      "ap-south-1": {
        "states": "states.ap-south-1.amazonaws.com",
      },
      "ap-south-2": {
        "states": "states.ap-south-2.amazonaws.com",
      },
      "ap-southeast-1": {
        "states": "states.ap-southeast-1.amazonaws.com",
      },
      "ap-southeast-2": {
        "states": "states.ap-southeast-2.amazonaws.com",
      },
      "ap-southeast-3": {
        "states": "states.ap-southeast-3.amazonaws.com",
      },
      "ap-southeast-4": {
        "states": "states.ap-southeast-4.amazonaws.com",
      },
      "ca-central-1": {
        "states": "states.ca-central-1.amazonaws.com",
      },
      "cn-north-1": {
        "states": "states.cn-north-1.amazonaws.com",
      },
      "cn-northwest-1": {
        "states": "states.cn-northwest-1.amazonaws.com",
      },
      "eu-central-1": {
        "states": "states.eu-central-1.amazonaws.com",
      },
      "eu-central-2": {
        "states": "states.eu-central-2.amazonaws.com",
      },
      "eu-north-1": {
        "states": "states.eu-north-1.amazonaws.com",
      },
      "eu-south-1": {
        "states": "states.eu-south-1.amazonaws.com",
      },
      "eu-south-2": {
        "states": "states.eu-south-2.amazonaws.com",
      },
      "eu-west-1": {
        "states": "states.eu-west-1.amazonaws.com",
      },
      "eu-west-2": {
        "states": "states.eu-west-2.amazonaws.com",
      },
      "eu-west-3": {
        "states": "states.eu-west-3.amazonaws.com",
      },
      "il-central-1": {
        "states": "states.il-central-1.amazonaws.com",
      },
      "me-central-1": {
        "states": "states.me-central-1.amazonaws.com",
      },
      "me-south-1": {
        "states": "states.me-south-1.amazonaws.com",
      },
      "sa-east-1": {
        "states": "states.sa-east-1.amazonaws.com",
      },
      "us-east-1": {
        "states": "states.us-east-1.amazonaws.com",
      },
      "us-east-2": {
        "states": "states.us-east-2.amazonaws.com",
      },
      "us-gov-east-1": {
        "states": "states.us-gov-east-1.amazonaws.com",
      },
      "us-gov-west-1": {
        "states": "states.us-gov-west-1.amazonaws.com",
      },
      "us-iso-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-iso-west-1": {
        "states": "states.amazonaws.com",
      },
      "us-isob-east-1": {
        "states": "states.amazonaws.com",
      },
      "us-west-1": {
        "states": "states.us-west-1.amazonaws.com",
      },
      "us-west-2": {
        "states": "states.us-west-2.amazonaws.com",
      },
    },
  },
  "Parameters": {
    "BootstrapVersion": {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": {
    "LambdaFunctionInvokeErrorCatchRule70C95FF4": {
      "Properties": {
        "EventPattern": {
          "detail": {
            "responsePayload": {
              "errorType": [
                "error",
              ],
            },
          },
          "detail-type": [
            "Lambda Function Invocation Result - Failure",
          ],
          "source": [
            "lambda",
          ],
        },
        "Name": "lambda-func-invoke-error-catch-38c73628-rule",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Ref": "StateMachine2E01A3A5",
            },
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "StartExecMachineRole28D483E3",
                "Arn",
              ],
            },
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "LambdaFunctionInvokeErrorNotificationTopic54C7E386": {
      "Properties": {
        "DisplayName": "Lambda Functions Invoke Error Notification Topic",
        "TopicName": "lambda-funcs-invoke-error-notification-38c73628-topic",
      },
      "Type": "AWS::SNS::Topic",
    },
    "LambdaFunctionInvokeErrorNotificationTopicfooexamplecom3EFA0BE4": {
      "Properties": {
        "Endpoint": "foo@example.com",
        "Protocol": "email",
        "TopicArn": {
          "Ref": "LambdaFunctionInvokeErrorNotificationTopic54C7E386",
        },
      },
      "Type": "AWS::SNS::Subscription",
    },
    "StartExecMachineRole28D483E3": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "lambda func invoke error start exec machine (send notification).",
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "states:StartExecution",
                  "Effect": "Allow",
                  "Resource": "*",
                },
              ],
              "Version": "2012-10-17",
            },
            "PolicyName": "states-start-execution-policy",
          },
        ],
        "RoleName": "lambda-func-invoke-error-start-exec-machine-38c73628-role",
      },
      "Type": "AWS::IAM::Role",
    },
    "StartExecMachineRoleDefaultPolicy9C23DAB3": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "states:StartExecution",
              "Effect": "Allow",
              "Resource": {
                "Ref": "StateMachine2E01A3A5",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StartExecMachineRoleDefaultPolicy9C23DAB3",
        "Roles": [
          {
            "Ref": "StartExecMachineRole28D483E3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "StateMachine2E01A3A5": {
      "DeletionPolicy": "Delete",
      "DependsOn": [
        "StateMachineRoleDefaultPolicyDF1E6607",
        "StateMachineRoleB840431D",
      ],
      "Properties": {
        "DefinitionString": {
          "Fn::Join": [
            "",
            [
              "{"StartAt":"PrepareMessage","States":{"PrepareMessage":{"Type":"Pass","ResultPath":"$.Prepare.Sns.Topic","Parameters":{"Subject.$":"States.Format('ðŸ˜µ [Failur] AWS Lambda Function Invocation Failur Notification [{}][{}]', $.account, $.region)","Message.$":"States.Format('Account : {}\\nRegion : {}\\nFunction : {}\\nErrorMessage : {}\\nTrace : {}', $.account, $.region, $.detail.requestContext.functionArn, $.detail.responsePayload.errorMessage, $.detail.responsePayload.trace)"},"Next":"SendNotification"},"SendNotification":{"End":true,"Type":"Task","InputPath":"$.Prepare.Sns.Topic","ResultPath":"$.Result.Sns.Topic","Resource":"arn:",
              {
                "Ref": "AWS::Partition",
              },
              ":states:::sns:publish","Parameters":{"TopicArn":"",
              {
                "Ref": "LambdaFunctionInvokeErrorNotificationTopic54C7E386",
              },
              "","Message.$":"$.Message","Subject.$":"$.Subject"}}},"TimeoutSeconds":300}",
            ],
          ],
        },
        "RoleArn": {
          "Fn::GetAtt": [
            "StateMachineRoleB840431D",
            "Arn",
          ],
        },
        "StateMachineName": "lambda-func-invoke-error-notification-38c73628-state-machine",
      },
      "Type": "AWS::StepFunctions::StateMachine",
      "UpdateReplacePolicy": "Delete",
    },
    "StateMachineRoleB840431D": {
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": {
                  "Fn::FindInMap": [
                    "ServiceprincipalMap",
                    {
                      "Ref": "AWS::Region",
                    },
                    "states",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "StateMachineRoleDefaultPolicyDF1E6607": {
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "sns:Publish",
              "Effect": "Allow",
              "Resource": {
                "Ref": "LambdaFunctionInvokeErrorNotificationTopic54C7E386",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "StateMachineRoleDefaultPolicyDF1E6607",
        "Roles": [
          {
            "Ref": "StateMachineRoleB840431D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
